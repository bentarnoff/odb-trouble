{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to the On-Demand Services Troubleshooting Guide\n\n\nTo get started, click on one of the links below:\n\n\nERRORS\n\n\nYou'll want to start here if you're responding to a specific error message you received\n\n\nCOMPONENTS\n\n\nGuidance on checking for and fixing issues in the ODB components\n\n\nTECHNIQUES\n\n\nInstructions on interacting with the on-demand service broker and on-demand service instance BOSH deployments, and on performing general maintenance and housekeeping tasks", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-the-on-demand-services-troubleshooting-guide", 
            "text": "To get started, click on one of the links below:", 
            "title": "Welcome to the On-Demand Services Troubleshooting Guide"
        }, 
        {
            "location": "/#errors", 
            "text": "You'll want to start here if you're responding to a specific error message you received", 
            "title": "ERRORS"
        }, 
        {
            "location": "/#components", 
            "text": "Guidance on checking for and fixing issues in the ODB components", 
            "title": "COMPONENTS"
        }, 
        {
            "location": "/#techniques", 
            "text": "Instructions on interacting with the on-demand service broker and on-demand service instance BOSH deployments, and on performing general maintenance and housekeeping tasks", 
            "title": "TECHNIQUES"
        }, 
        {
            "location": "/components/", 
            "text": "Components\n\n\nBOSH problems\n\n\nMissing BOSH director UUID\n\n\nIf using the BOSH v1 CLI you need to re-add the director_uuid to the manifest\n\n1\nbosh status --uuid\n\n\n\n\nEdit the manifest and add the \ndirector_uuid:\n from the previous command at the top of the manifest. For more, see \nhttps://bosh.io/docs/manifest-v2.html#deployment\n \n\n\nLarge BOSH queue\n\n\nOpsManager currently deploys two BOSH workers. On-demand service brokers will add tasks to the BOSH queue. Until the workers reach the queued items the application developer will see \ncreate in progess\n in the CF CLI. \n\n\nThe number of BOSH workers will become configurable in future version of OpsManager.\n\n\nConfiguration\n\n\nService instances in failing state\n\n\nYou may have configured a VM / Disk type in tile plan page in OpsManager that is too low for the service instance to start. Please see tile specific guideance on resource requirements.\n\n\nAuthentication\n\n\nUAA Changes\n\n\nIf you have rotated any UAA users credentials then you may see authenticiatin issues in the service broker logs. \n\n\nTo resolve this you should redeloy the service tile in OpsManager, which will provide the broker with the latest configuration.\n\n\n\n\nNote\n\n\nYou must ensure that any changes to UAA credentials are reflected in the OpsManager \ncredentials\n tab of the Elastic Runtime Tile.\n\n\n\n\nNetworking\n\n\nCommon issues include:\n\n\n\n\nNetwork latency issues when connecting to the service instance to create or delete a binding. Solution is to try again or improve network performance\n\n\nNetwork firewall rules are blocking connections from the service broker to the service instance. In OpsManager go into the tile and see the two networks that are configured in the networks tab. Ensure that these networks allow access to each other.\n\n\nNetwork firewall rules are blocking connections from the service network to the BOSH director network. Service instances must have access to the director so that the BOSH agents can report in.\n\n\nCloud Foundry application security groups may not be configured to allow access to the service network. This is required to allow applications on the runtime to connect to services.\n\n\nThere could also be a problem accessing BOSH\u2019s UAA or the BOSH director. Follow network troubleshooting and check BOSH director is online\n\n\n\n\nValidating the service broker's connectivity to service instances\n\n\nTo validate you can \nbosh ssh\n onto the service broker by first downloading the broker manifest and targeting the deployment, and try to reach the service instance. If no BOSH task-id is in the error message, then look in the broker log using the broker-request-id from the task.\n\n\nValidating the application on the runtime has access to the service instance.\n\n\nYou can use \ncf ssh\n to gain access to the application container and then attempt to connect to the service instance using the binding detailed in the VCAP_SERVICES environment variable.\n\n\nFailing jobs and unhealthy instances\n\n\nTo determine whether there is an issue with the service deployment\n\n\n1\n$ bosh vms --vitals service-instance_\n$guid\n\n\n\n\n\n\n\nFor additional information \n\n1\n$ bosh instances --ps --vitals\n\n\n\n\n\nIf the VM is failing you will need to follow the service specific information, as any unadvised corrective actions (such as running bosh restart on a VM) may cause issues in the service instance.\n\n\nMissing logs and metrics\n\n\nIf no logs are being emitted by the on-demand broker:\n\n\n\n\nEnsure you have configured syslog for the tile\n\n\nEnsure that you have network connectivity between the networks the tile is using and the syslog destination. If the destination is external then you will need to use the \npublic ip\n vm extension feature available in your Ops Manager tile configuration settings.\n\n\n\n\nTo verify if metrics are being emitted to the firehose:\n\n\n\n\nInstall the \ncf nozzle\n plugin\n\n\nRun: \n\n1\n$ cf nozzle -f ValueMetric \n|\n grep --line-buffered \u201con-demand-broker/\nservice offering name\n\u201d \n\n\n\n\n\n\n\nIf no metrics appear within 5 minutes:\nVerify that the broker network has access to the loggregator system, on all required ports. \nContact Pivotal support\n if you are unable to resolve the issue. \n\n\nFiling a support ticket\n\n\nYou can file a support ticket \nhere\n. Please be sure to provide the \nerror message\n from \n\n1\n$ cf service \nyour-service\n\n\n\n\n\nPlease also provide your \nservice broker logs\n, your \nservice instance logs\n and \nBOSH task output\n (if a \ntask-id\n is provided as part of the \ncf service \nyour-service\n output) to help expedite troubleshooting.\n\n\nKnowledge Base (Community)\n\n\nImagine a world where we autopopulate the first 10 hits from \nhttp://discuss.pivotal.io\n . For now, you'll just have to click on the link.", 
            "title": "Components"
        }, 
        {
            "location": "/components/#components", 
            "text": "", 
            "title": "Components"
        }, 
        {
            "location": "/components/#bosh-problems", 
            "text": "", 
            "title": "BOSH problems"
        }, 
        {
            "location": "/components/#missing-bosh-director-uuid", 
            "text": "If using the BOSH v1 CLI you need to re-add the director_uuid to the manifest 1 bosh status --uuid  \nEdit the manifest and add the  director_uuid:  from the previous command at the top of the manifest. For more, see  https://bosh.io/docs/manifest-v2.html#deployment", 
            "title": "Missing BOSH director UUID"
        }, 
        {
            "location": "/components/#large-bosh-queue", 
            "text": "OpsManager currently deploys two BOSH workers. On-demand service brokers will add tasks to the BOSH queue. Until the workers reach the queued items the application developer will see  create in progess  in the CF CLI.   The number of BOSH workers will become configurable in future version of OpsManager.", 
            "title": "Large BOSH queue"
        }, 
        {
            "location": "/components/#configuration", 
            "text": "", 
            "title": "Configuration"
        }, 
        {
            "location": "/components/#service-instances-in-failing-state", 
            "text": "You may have configured a VM / Disk type in tile plan page in OpsManager that is too low for the service instance to start. Please see tile specific guideance on resource requirements.", 
            "title": "Service instances in failing state"
        }, 
        {
            "location": "/components/#authentication", 
            "text": "", 
            "title": "Authentication"
        }, 
        {
            "location": "/components/#uaa-changes", 
            "text": "If you have rotated any UAA users credentials then you may see authenticiatin issues in the service broker logs.   To resolve this you should redeloy the service tile in OpsManager, which will provide the broker with the latest configuration.   Note  You must ensure that any changes to UAA credentials are reflected in the OpsManager  credentials  tab of the Elastic Runtime Tile.", 
            "title": "UAA Changes"
        }, 
        {
            "location": "/components/#networking", 
            "text": "Common issues include:   Network latency issues when connecting to the service instance to create or delete a binding. Solution is to try again or improve network performance  Network firewall rules are blocking connections from the service broker to the service instance. In OpsManager go into the tile and see the two networks that are configured in the networks tab. Ensure that these networks allow access to each other.  Network firewall rules are blocking connections from the service network to the BOSH director network. Service instances must have access to the director so that the BOSH agents can report in.  Cloud Foundry application security groups may not be configured to allow access to the service network. This is required to allow applications on the runtime to connect to services.  There could also be a problem accessing BOSH\u2019s UAA or the BOSH director. Follow network troubleshooting and check BOSH director is online", 
            "title": "Networking"
        }, 
        {
            "location": "/components/#validating-the-service-brokers-connectivity-to-service-instances", 
            "text": "To validate you can  bosh ssh  onto the service broker by first downloading the broker manifest and targeting the deployment, and try to reach the service instance. If no BOSH task-id is in the error message, then look in the broker log using the broker-request-id from the task.", 
            "title": "Validating the service broker's connectivity to service instances"
        }, 
        {
            "location": "/components/#validating-the-application-on-the-runtime-has-access-to-the-service-instance", 
            "text": "You can use  cf ssh  to gain access to the application container and then attempt to connect to the service instance using the binding detailed in the VCAP_SERVICES environment variable.", 
            "title": "Validating the application on the runtime has access to the service instance."
        }, 
        {
            "location": "/components/#failing-jobs-and-unhealthy-instances", 
            "text": "To determine whether there is an issue with the service deployment  1 $ bosh vms --vitals service-instance_ $guid    For additional information  1 $ bosh instances --ps --vitals   If the VM is failing you will need to follow the service specific information, as any unadvised corrective actions (such as running bosh restart on a VM) may cause issues in the service instance.", 
            "title": "Failing jobs and unhealthy instances"
        }, 
        {
            "location": "/components/#missing-logs-and-metrics", 
            "text": "If no logs are being emitted by the on-demand broker:   Ensure you have configured syslog for the tile  Ensure that you have network connectivity between the networks the tile is using and the syslog destination. If the destination is external then you will need to use the  public ip  vm extension feature available in your Ops Manager tile configuration settings.   To verify if metrics are being emitted to the firehose:   Install the  cf nozzle  plugin  Run:  1 $ cf nozzle -f ValueMetric  |  grep --line-buffered \u201con-demand-broker/ service offering name \u201d     If no metrics appear within 5 minutes:\nVerify that the broker network has access to the loggregator system, on all required ports.  Contact Pivotal support  if you are unable to resolve the issue.", 
            "title": "Missing logs and metrics"
        }, 
        {
            "location": "/components/#filing-a-support-ticket", 
            "text": "You can file a support ticket  here . Please be sure to provide the  error message  from  1 $ cf service  your-service   \nPlease also provide your  service broker logs , your  service instance logs  and  BOSH task output  (if a  task-id  is provided as part of the  cf service  your-service  output) to help expedite troubleshooting.", 
            "title": "Filing a support ticket"
        }, 
        {
            "location": "/components/#knowledge-base-community", 
            "text": "Imagine a world where we autopopulate the first 10 hits from  http://discuss.pivotal.io  . For now, you'll just have to click on the link.", 
            "title": "Knowledge Base (Community)"
        }, 
        {
            "location": "/errors/", 
            "text": "Errors\n\n\nMy install failed\n\n\n\n\nCertificate errors - The on-demand service broker requires valid certificates. Ensure that your certificates are valid and \ngenerate new ones\n if necessary. \n\n\nDeploy fails - Deploys can fail for a variety of reasons. View the logs via Ops Manager to determine why the deploy is failing.\n\n\n\n\nNetworking problems\n - These can occur when:\n\n\n\n\nCF cannot reach the service broker\n\n\nCF cannot reach the service instances\n\n\nThe service network cannot access the BOSH director   \n\n\n\n\n\n\n\n\nRegister broker errand\n fails\n\n\n\n\nThe \nSmoke test errand\n failed\n\n\nResource sizing issues - These occur when the resource sizes selected for a given plan are less than the service requires to function. Check your resource configuration in Ops Manager and ensure that the configuration matches that recommended by the service.\n\n\nOther service-specific issues\n\n\n\n\nReinstalling a tile in the same environment where it was previously uninstalled\n\n\n\n\nEnsure that the previous tile was correctly uninstalled\n\n\ncf login\n as an admin user\n\n\ncf m\n does not list the service\n\n\nbosh login\n as an admin user\n\n\nbosh deployments\n does not show a deployment for the service. For example no \np-concourse-$guid\n deployment exists\n\n\nBefore reinstalling a tile all previous service instances and service brokers must be deleted from the BOSH director\n\n\nIf the service broker still exists then run the \ndelete-all-service-instances errand\n and then the \nderegister-broker errand\n\n\nNext delete the service broker BOSH deployment\n\n1\n$ bosh delete deployment \n{\nyour_broker_deployment\n}\n\n\n\n\n\n\nFinally install the tile again\n\n\n\n\nUpgrade all service instances errand failed\n\n\nLook at the errand output in the OpsManager log.\n\n\nIf an instance fails to upgrade, you should debug and fix it before proceeding with running the errand again. This is to stop any failure issues from spreading to other on-demand instances.\n\n\nOnce the deployment is not \nfailing\n you can \nre-run the errand\n to upgrade the rest of the instances. \n\n\nUpgrade all service instances errand is taking a very long time\n\n\n\n\nDepending on the number of service instances the upgrade errands will take ~15-20 minutes per instance if changing any IaaS resources and ~5-10 minutes per instance for changing BOSH releases / configuration. This is IaaS dependant.\n\n\nTo calculate how long the errand should take multiply the number of instances by 20 minutes. \n\n\nIf the errand goes on for much longer than this you may want do the following:\n   -ssh onto the errand vm\n   -\ncd /var/vcap/sys/log\n and look for the errand output log\n   -\ntail -f $log\n and see if the errand is still attempting to upgrade instances. If it is then allow the errand to continue. If it appears to be stuck:\n    -\nbosh tasks\n and identify the errand task\n    -\nbosh cancel task $task_id\n\n\nYou can then \nretry running the errand\n\n\n\n\nMy app devs report that they cannot create or delete service instances\n\n\n1\nInstance provisioning failed: There was a problem completing your request. Please contact your operations team providing the following information: service: redis-acceptance, service-instance-guid: ae9e232c-0bd5-4684-af27-1b08b0c70089, broker-request-id: 63da3a35-24aa-4183-aec6-db8294506bac, task-id: 442, operation: create\n\n\n\n\n\n\nLog in to BOSH\n and target the service instance using the instructions on \nparsing a CF error message\n.\n\n\nRetrieve the bosh task ID and run\n\nbosh task $task-id\n\n\n\n\nConfiguration errors: If the BOSH error shows a problem with the deployment manifest\n\n\n\n\nGet the service-instance-manifest:\n\n1\nbosh download manifest service-instance_$guid myservice.yml\n\n\n\n\n\nAccess the broker logs\n  and use the \nbroker-request-id\n from the error message above to search the log for more information.\n\n\n\n\n\n\nAuthentication errors\n\n\n\n\n\n\nNetwork errors\n\n\n\n\n\n\nQuota errors\n \n\n\n\n\n\n\nMy app devs report that they cannot bind to or unbind from service instances\n\n\nInstance does not exist\n\n\n1\nServer error, status code: 502, error code: 10001, message: Service broker error: instance does not exist\u201d\n\n\n\n\n1. Check that the service instance exists in BOSH and CF\n\n1\ncf service myservice --guid\n\n\n\n\n2. Record the guid response and run the bosh vms command\n\nbosh vms service-instance_$guid\n\nIf the bosh deployment is not found then it has been deleted from BOSH. Contact Pivotal support for further assistance on recovery steps.\n\n\nOther errors\n\n\n1\nServer error, status code: 502, error code: 10001, message: Service broker error: There was a problem completing your request. Please contact your operations team providing the following information: service: example-service, service-instance-guid: 8d69de6c-88c6-4283-b8bc-1c46103714e2, broker-request-id: 15f4f87e-200a-4b1a-b76c-1c4b6597c2e1, operation: bind\n\n\n\n\n\n\nTo find out the exact issue with creating the binding \naccess the service broker logs\n\n\nUse the broker-request-id from the error message above to search the log for more information. \n\n\nContact Pivotal support for further assistance if you are unable to resolve the problem.\n\n\n\n\n\n\nAuthentication errors\n\n\n\n\n\n\nNetwork errors\n\n\n\n\n\n\nMy App devs report that they cannot connect to a created service\n\n\nAsk the user to send application logs that show the connection error. If the error is originating from the service then follow service specific instructions. If the issue appears to be network related then:\n\n\nCheck that application security groups are configured correctly\n\nhttps://docs.cloudfoundry.org/adminguide/app-sec-groups.html\n\nAccess should be configured for the service network the tile is deployed to\nEnsure that the network the PCF Elastic Runtime tile is deployed to has network access to the service network.\nIn OpsManager go into the service tile and see the service network that is configured in the networks tab.\nIn OpsManager go into the ERT tile and see the network it is assigned to.\nMake sure that these networks can access each other.\n\n\nMy App devs report that they are experiencing request timeouts\n\n\n1\nServer error, status code: 504, error code: 10001, message: The request to the service broker timed out: https://$broker_url/v2/service_instances/e34046d3-2379-40d0-a318-d54fc7a5b13f/service_bindings/aa635a3b-ef6d-41c3-a23f-55752f3f651b\n\n\n\n\n\n\n\n\nValidate that CF has \nnetwork connectivity to the service broker\n. \n\n\nCheck the BOSH queue size:\n    -Login to BOSH as the admin user\n    -Run \nbosh tasks\n\n\nIf there are a large number of queued tasks then the system may be under load. BOSH is configured with two workers and one status worker. Advise app developers to try again later once the system is under less load.\n\n\n\n\nIn the future PCF OpsManager will support configuring the number of BOSH workers available to the system.\n\n\nApp dev reports a problem with creating or using a service key\n\n\nCreate errors\n\n\nFollow the troubleshooting instructions for \nbinding a service\n\n\nUse errors\n\n\n\n\nEnsure that the network the user is trying to use the service key from has access to the service network the tile is deployed to.\n\n\nIn OpsManager go into the tile and see the service network that is configured in the networks tab.\n\n\nIn the BOSH director tile you can find the network definition for this service network.\n\n\n\n\nApp dev reports quota errors\n\n\nPlan Quota issues\n\n\nIf you see the following error:\n\n\n1\n2\nMessage\n:\n \nService\n \nbroker\n \nerror\n:\n \nThe\n \nquota\n \nfor\n \nthis\n \nservice\n \nplan\n \nhas\n \nbeen\n \nexceeded\n.\n \n\nPlease\n \ncontact\n \nyour\n \nOperator\n \nfor\n \nhelp\n.\n\n\n\n\n\n\n\n\n\nCheck your current plan quota\n\n\nIncrease the plan quota\n\n\nLog into ops manager\n\n\nReconfigure the quota on the plan page\n\n\nDeploy the tile\n\n\n\n\n\n\nFind out who is using the plan quota\n and take the appropriate action\n\n\n\n\nGlobal Quota issues\n\n\nIf you see this error:\n\n\n1\n2\nMessage\n:\n \nService\n \nbroker\n \nerror\n:\n \nThe\n \nquota\n \nfor\n \nthis\n \nservice\n \nhas\n \nbeen\n \nexceeded\n.\n \n\nPlease\n \ncontact\n \nyour\n \nOperator\n \nfor\n \nhelp\n.\n\n\n\n\n\n\n\n\n\nCheck your current global quota - TODO OpsManager workflow\n\n\nIncrease the global quota \n\n\nLog into ops manager\n\n\nReconfigure the quota on the on-demand settings page\n\n\nDeploy the tile\n\n\nFind out who is using the quota and take the appropriate action - TODO CF workflow\n\n\n\n\nFiling a support ticket\n\n\nYou can file a support ticket \nhere\n. Please be sure to provide the \nerror message\n from \n\n1\n$ cf service \nyour-service\n\n\n\n\n\nPlease also provide your \nservice broker logs\n, your \nservice instance logs\n and \nBOSH task output\n (if a \ntask-id\n is provided as part of the \ncf service \nyour-service\n output) to help expedite troubleshooting.\n\n\nKnowledge Base (Community)\n\n\nImagine a world where we autopopulate the first 10 hits from \nhttp://discuss.pivotal.io\n . For now, you'll just have to click on the link.", 
            "title": "Errors"
        }, 
        {
            "location": "/errors/#errors", 
            "text": "", 
            "title": "Errors"
        }, 
        {
            "location": "/errors/#my-install-failed", 
            "text": "Certificate errors - The on-demand service broker requires valid certificates. Ensure that your certificates are valid and  generate new ones  if necessary.   Deploy fails - Deploys can fail for a variety of reasons. View the logs via Ops Manager to determine why the deploy is failing.   Networking problems  - These can occur when:   CF cannot reach the service broker  CF cannot reach the service instances  The service network cannot access the BOSH director        Register broker errand  fails   The  Smoke test errand  failed  Resource sizing issues - These occur when the resource sizes selected for a given plan are less than the service requires to function. Check your resource configuration in Ops Manager and ensure that the configuration matches that recommended by the service.  Other service-specific issues", 
            "title": "My install failed"
        }, 
        {
            "location": "/errors/#reinstalling-a-tile-in-the-same-environment-where-it-was-previously-uninstalled", 
            "text": "Ensure that the previous tile was correctly uninstalled  cf login  as an admin user  cf m  does not list the service  bosh login  as an admin user  bosh deployments  does not show a deployment for the service. For example no  p-concourse-$guid  deployment exists  Before reinstalling a tile all previous service instances and service brokers must be deleted from the BOSH director  If the service broker still exists then run the  delete-all-service-instances errand  and then the  deregister-broker errand  Next delete the service broker BOSH deployment 1 $ bosh delete deployment  { your_broker_deployment }    Finally install the tile again", 
            "title": "Reinstalling a tile in the same environment where it was previously uninstalled"
        }, 
        {
            "location": "/errors/#upgrade-all-service-instances-errand-failed", 
            "text": "Look at the errand output in the OpsManager log.  If an instance fails to upgrade, you should debug and fix it before proceeding with running the errand again. This is to stop any failure issues from spreading to other on-demand instances.  Once the deployment is not  failing  you can  re-run the errand  to upgrade the rest of the instances.", 
            "title": "Upgrade all service instances errand failed"
        }, 
        {
            "location": "/errors/#upgrade-all-service-instances-errand-is-taking-a-very-long-time", 
            "text": "Depending on the number of service instances the upgrade errands will take ~15-20 minutes per instance if changing any IaaS resources and ~5-10 minutes per instance for changing BOSH releases / configuration. This is IaaS dependant.  To calculate how long the errand should take multiply the number of instances by 20 minutes.   If the errand goes on for much longer than this you may want do the following:\n   -ssh onto the errand vm\n   - cd /var/vcap/sys/log  and look for the errand output log\n   - tail -f $log  and see if the errand is still attempting to upgrade instances. If it is then allow the errand to continue. If it appears to be stuck:\n    - bosh tasks  and identify the errand task\n    - bosh cancel task $task_id  You can then  retry running the errand", 
            "title": "Upgrade all service instances errand is taking a very long time"
        }, 
        {
            "location": "/errors/#my-app-devs-report-that-they-cannot-create-or-delete-service-instances", 
            "text": "1 Instance provisioning failed: There was a problem completing your request. Please contact your operations team providing the following information: service: redis-acceptance, service-instance-guid: ae9e232c-0bd5-4684-af27-1b08b0c70089, broker-request-id: 63da3a35-24aa-4183-aec6-db8294506bac, task-id: 442, operation: create   Log in to BOSH  and target the service instance using the instructions on  parsing a CF error message .  Retrieve the bosh task ID and run bosh task $task-id   Configuration errors: If the BOSH error shows a problem with the deployment manifest   Get the service-instance-manifest: 1 bosh download manifest service-instance_$guid myservice.yml   Access the broker logs   and use the  broker-request-id  from the error message above to search the log for more information.    Authentication errors    Network errors    Quota errors", 
            "title": "My app devs report that they cannot create or delete service instances"
        }, 
        {
            "location": "/errors/#my-app-devs-report-that-they-cannot-bind-to-or-unbind-from-service-instances", 
            "text": "", 
            "title": "My app devs report that they cannot bind to or unbind from service instances"
        }, 
        {
            "location": "/errors/#instance-does-not-exist", 
            "text": "1 Server error, status code: 502, error code: 10001, message: Service broker error: instance does not exist\u201d  \n1. Check that the service instance exists in BOSH and CF 1 cf service myservice --guid  \n2. Record the guid response and run the bosh vms command bosh vms service-instance_$guid \nIf the bosh deployment is not found then it has been deleted from BOSH. Contact Pivotal support for further assistance on recovery steps.", 
            "title": "Instance does not exist"
        }, 
        {
            "location": "/errors/#other-errors", 
            "text": "1 Server error, status code: 502, error code: 10001, message: Service broker error: There was a problem completing your request. Please contact your operations team providing the following information: service: example-service, service-instance-guid: 8d69de6c-88c6-4283-b8bc-1c46103714e2, broker-request-id: 15f4f87e-200a-4b1a-b76c-1c4b6597c2e1, operation: bind   To find out the exact issue with creating the binding  access the service broker logs  Use the broker-request-id from the error message above to search the log for more information.   Contact Pivotal support for further assistance if you are unable to resolve the problem.    Authentication errors    Network errors", 
            "title": "Other errors"
        }, 
        {
            "location": "/errors/#my-app-devs-report-that-they-cannot-connect-to-a-created-service", 
            "text": "Ask the user to send application logs that show the connection error. If the error is originating from the service then follow service specific instructions. If the issue appears to be network related then:  Check that application security groups are configured correctly https://docs.cloudfoundry.org/adminguide/app-sec-groups.html \nAccess should be configured for the service network the tile is deployed to\nEnsure that the network the PCF Elastic Runtime tile is deployed to has network access to the service network.\nIn OpsManager go into the service tile and see the service network that is configured in the networks tab.\nIn OpsManager go into the ERT tile and see the network it is assigned to.\nMake sure that these networks can access each other.", 
            "title": "My App devs report that they cannot connect to a created service"
        }, 
        {
            "location": "/errors/#my-app-devs-report-that-they-are-experiencing-request-timeouts", 
            "text": "1 Server error, status code: 504, error code: 10001, message: The request to the service broker timed out: https://$broker_url/v2/service_instances/e34046d3-2379-40d0-a318-d54fc7a5b13f/service_bindings/aa635a3b-ef6d-41c3-a23f-55752f3f651b    Validate that CF has  network connectivity to the service broker .   Check the BOSH queue size:\n    -Login to BOSH as the admin user\n    -Run  bosh tasks  If there are a large number of queued tasks then the system may be under load. BOSH is configured with two workers and one status worker. Advise app developers to try again later once the system is under less load.   In the future PCF OpsManager will support configuring the number of BOSH workers available to the system.", 
            "title": "My App devs report that they are experiencing request timeouts"
        }, 
        {
            "location": "/errors/#app-dev-reports-a-problem-with-creating-or-using-a-service-key", 
            "text": "", 
            "title": "App dev reports a problem with creating or using a service key"
        }, 
        {
            "location": "/errors/#create-errors", 
            "text": "Follow the troubleshooting instructions for  binding a service", 
            "title": "Create errors"
        }, 
        {
            "location": "/errors/#use-errors", 
            "text": "Ensure that the network the user is trying to use the service key from has access to the service network the tile is deployed to.  In OpsManager go into the tile and see the service network that is configured in the networks tab.  In the BOSH director tile you can find the network definition for this service network.", 
            "title": "Use errors"
        }, 
        {
            "location": "/errors/#app-dev-reports-quota-errors", 
            "text": "", 
            "title": "App dev reports quota errors"
        }, 
        {
            "location": "/errors/#plan-quota-issues", 
            "text": "If you see the following error:  1\n2 Message :   Service   broker   error :   The   quota   for   this   service   plan   has   been   exceeded .   Please   contact   your   Operator   for   help .     Check your current plan quota  Increase the plan quota  Log into ops manager  Reconfigure the quota on the plan page  Deploy the tile    Find out who is using the plan quota  and take the appropriate action", 
            "title": "Plan Quota issues"
        }, 
        {
            "location": "/errors/#global-quota-issues", 
            "text": "If you see this error:  1\n2 Message :   Service   broker   error :   The   quota   for   this   service   has   been   exceeded .   Please   contact   your   Operator   for   help .     Check your current global quota - TODO OpsManager workflow  Increase the global quota   Log into ops manager  Reconfigure the quota on the on-demand settings page  Deploy the tile  Find out who is using the quota and take the appropriate action - TODO CF workflow", 
            "title": "Global Quota issues"
        }, 
        {
            "location": "/errors/#filing-a-support-ticket", 
            "text": "You can file a support ticket  here . Please be sure to provide the  error message  from  1 $ cf service  your-service   \nPlease also provide your  service broker logs , your  service instance logs  and  BOSH task output  (if a  task-id  is provided as part of the  cf service  your-service  output) to help expedite troubleshooting.", 
            "title": "Filing a support ticket"
        }, 
        {
            "location": "/errors/#knowledge-base-community", 
            "text": "Imagine a world where we autopopulate the first 10 hits from  http://discuss.pivotal.io  . For now, you'll just have to click on the link.", 
            "title": "Knowledge Base (Community)"
        }, 
        {
            "location": "/techniques/", 
            "text": "Techniques\n\n\nUsing BOSH and CF to access logs and SSH\n\n\n\n\nFollow the steps described here to \ntarget your BOSH CLI\n and \nlog-in to your CF CLI\n\n\n\n\nAccessing broker logs and VM(s)\n\n\n\n\nIdentify the ODB deployment using \n\n1\n$ bosh deployments\n\n\n\n\n\nDownload the ODB manifest using \n\n1\n$ bosh download manifest \nodb-deployment-name\n odb.yml\n\n\n\n\n\nSelect the ODB deployment using \n\n1\n$ bosh deployment odb.yml\n\n\n\n\n\nView VMs in the deployment using \n\n1\n$ bosh instances\n\n\n\n\n\nTo ssh onto the VM use \n\n1\n$ bosh ssh \ninstance-id\n\n\n\n\n\n\nDownload broker logs by using the \n\n1\n$ bosh logs \ninstance-id\n\n\n\n\n\nYou can also \naccess logs via Ops Manager\n by clicking on the \"logs\" tab in the tile and downloading the broker logs.\n\n\n\n\nThe archive generated by BOSH or Ops Manager will comprise the following logs:\n\n\n\n\n\n\n\n\nLog Name\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nbroker_ctl.log\n\n\nThe log for the control script for starting and stopping the on demand broker\n\n\n\n\n\n\nbroker.log\n\n\nThe log for requests to the on demand broker and the actions the broker performs while orchestrating the request (e.g. generating a manifest and calling BOSH). You will want to start here when troubleshooting\n\n\n\n\n\n\npost-start.stderr.log\n\n\nThe log for any errors that occur during post-start verification\n\n\n\n\n\n\npost-start.stdout.log\n\n\nThe log for post-start verification\n\n\n\n\n\n\n\n\nAccessing service instance manifests logs and VM(s)\n\n\n\n\n\n\nTo target an individual service instance deployment, retrieve the \nthe guid of your service instance with the CF CLI command \n\n1\n$ cf service \n{\nYOUR_SERVICE\n}\n --guid\n\n\n\n\n\n\n\n\n\nPre-pend the text \nservice_instance-\n to the guid you just obtained to create the ID that BOSH uses for your service instance (e.g. if your guid is \n1Hy6H\n, this becomes \nservice_instance-1Hy6H\n).\n\n\n\n\n\n\nDownload your bosh manifest for the service using \n\n1\n$ bosh download manifest service_instance-guid myservice.yml\n\n\n\n\n\n\n\nSelect the deployment using \n\n1\n$ bosh deployment myservice.yml\n\n\n\n\n\nView VMs in the deployment using \n\n1\n$ bosh instances\n\n\n\n\n\nDownload instance logs by using the \n\n1\n$ bosh logs \ninstance-id\n\n\n\n\n\n\nTo ssh onto the VM use \n\n1\n$ bosh ssh \ninstance-id\n\n\n\n\n\n\n\n\nMapping a \ncf service\n to a \nbosh deployment\n\n\n\n\nRetrieve the the guid of your service instance with the CF CLI command\n\n1\n$ cf service \n{\nYOUR_SERVICE\n}\n --guid\n\n\n\n\n\n\n\nPre-pend the text \nservice_instance-\n to the guid you just obtained to create the ID that BOSH uses for your service instance (e.g. if your guid is \n1Hy6H\n, this becomes \nservice_instance-1Hy6H\n).\n\n\n\n\n\n\nDownload your bosh manifest for the service using\n\n1\n$ bosh download manifest \n{\nyour_service_instance-guid\n}\n myservice.yml\n\n\n\n\n\n\n\n\n\nSelect the deployment using\n\n1\n$ bosh deployment myservice.yml\n\n\n\n\n\n\n\n\n\nGetting the admin credentials for a service instance\n\n\n\n\nIdentify the service deployment by GUID\n.\n\n\nLogin to BOSH\n\n\nDownload the manifest for the service instance\n and \nadd the guid\n if using the v1 BOSH CLI\n\n\nLook in the manifest for the credentials as described in the service documentation.\n\n\n\n\nParsing a CF error message\n\n\nFailed operations (create, update, bind, unbind, delete) will result in an error message that can be retrieved using the CF cli\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n$ cf service myservice\n\nService instance: myservice\nService: super-db\nBound apps:\nTags:\nPlan: dedicated-vm\nDescription: Dedicated Instance\nDocumentation url:\nDashboard: \n\nLast Operation\nStatus: create failed\n\nMessage: Instance provisioning failed: There was a problem completing your request. \n\n         Please contact your operations team providing the following information: \n\n         service: redis-acceptance, \n\n         service-instance-guid: ae9e232c-0bd5-4684-af27-1b08b0c70089,\n\n         broker-request-id: 63da3a35-24aa-4183-aec6-db8294506bac, \n\n         task-id: \n442\n, \n\n         operation: create\n\nStarted: \n2017\n-03-13T10:16:55Z\nUpdated: \n2017\n-03-13T10:17:58Z\n\n\n\n\nThe information under the \"Message\" field can be used to debug further. Please provide this information to Pivotal Support when filing a ticket.\n\n\nThe \ntask-id\n field maps to the BOSH task id. For further information on a failed BOSH task, use the \nbosh task \ntask-id\n command in the BOSH CLI.\n\n\nThe \nbroker-request-guid\n maps to the portion of the On-Demand Broker log containing the failed step. Access the broker log via your syslog aggregator, or access bosh logs for the broker by typing \nbosh logs broker 0\n. If you have more than one broker instance, you will need to repeat this process for each instance.\n\n\nRunning Service Broker Errands\n\n\nRegister Broker\n\n\nThis errand registers the broker with Cloud Foundry and enables access to plans in the service catalog. The errand should be run whenever the broker is re-deployed with new catalog metadata to update the Cloud Foundry catalog.\n\n\nPlans with disabled service access will not be visible to non-admin Cloud Foundry users (including Org Managers and Space Managers). Admin Cloud Foundry users can see all plans including those with disabled service access.\n\n\nThe errand will do the following operaitons:\n\n\n\n\nRegister the service broker with Cloud Controller\n\n\nEnable service access for any plans that have the radio button set to \nenabled\n in the tile plan page.\n\n\nDisable service access for any plans that have the radio button set to \ndisabled\n in the tile plan page.\n\n\nDo nothing for any for any plans that have the radio button set to \nmanual\n\n\n\n\nTo run this errand use the following BOSH command against the on-demand service broker deployment:\n\n\n1\nbosh run errand register-broker\n\n\n\n\n\n\nDeregister Broker\n\n\nThis errand deregisters a broker from Cloud Foundry. It requires that there are no existing service instances. You can use the \nDelete All Service Instances errand\n to delete any existing service instances that are problematic.\n\n\nThe errand will do the following operaitons:\n\n\n\n\nDelete the service broker from Cloud Controller\n\n\nFail if there are any service instances, with or without bindings\n\n\n\n\nTo run this errand use the following BOSH command against the on-demand service broker deployment:\n\n\n1\nbosh run errand deregister-broker\n\n\n\n\n\n\nUpgrade All Service Instances\n\n\nIf you have made changes to the plan defintion or uploaded a new tile into OpsManager you may want to upgrade all the services to the latest software / plan definition. \n\n\nTo do this you can either select the errand through the OpsManager UI and have this happen along with the \napply-changes\n action or run the errand directly.\n\n\nThe errand will do the following operaitons:\n\n\n\n\nCollect all of the service instances the on-demand broker has registered\n\n\nFor each instance the errand will serially:\n\n\nIssue an upgrade command to the on-demand broker \n\n\nThe on-demand broker will re-generate the service instance manifest based on its latest configuration from the tile.\n\n\nThe on-demand broker will deploy the new mainfest for the service instance.\n\n\nThe errand will wait for this operation to complete, then proceed to the next instance.\n\n\n\n\n\n\nAny instances that have ongoing BOSH tasks at the time of upgrade will be added to a retry list.\n\n\nAny instances in the retry list will be retried at the end of the errand until all are upgraded.\n\n\nIf any instance fails to upgrade the errand will fail immediately.\n\n\nThis prevents any systemic problem from spreading to the rest of your service instances. \n\n\n\n\n\n\n\n\nDetect Orphaned BOSH Deployments\n\n\nThe deployment for a service instance is defined as \u2018Orphaned\u2019 when the BOSH deployment is still running, but the service is no longer registered in Cloud Foundry.\n\n\nThe orphan-deployments errand will collate a list of service deployments that have no matching service instances in Cloud Foundry and return the list to the operator. It is then up to the operator to remove the orphaned bosh deployments.\n\n\nTo run this errand use the following BOSH command against the on-demand service broker deployment:\n\n\n1\nbosh run errand orphan-deployments\n\n\n\n\n\n\nIf orphan deployments are present, the errand will output a list of deployment names:\n\n\n1\n2\n3\n4\n5\n6\n7\n[stdout]\n\n\n[{\ndeployment_name\n:\nservice-instance_aoeu39fgn-8125-05h2-9023-9vbxf7676f3\n}]\n\n\n\n[stderr]\n\n\nNone\n\n\n\nErrand \norphan-deployments\n completed successfully (exit code 0)\n\n\n\n\n\n\n\nTo cleanup orphaned instances you can perform the following actions:\n\n\n\n\nWarning\n\n\nDeleting the bosh deployment will destroy the vm, any data present will be lost.\n\n\n\n\nTo delete the orphan deployment run the following BOSH command:\n\n1\nbosh delete deployment service-instance_$GUID\n\n\n\n\n\nDelete All Service Instances\n\n\nThis errand deletes all service instances of your broker\u2019s service offering in every org and space of Cloud Foundry. It uses the Cloud Controller API to do this, and therefore only deletes instances the Cloud Controller knows about. It will not delete orphan BOSH deployments: those that don\u2019t correspond to a known service instance. Orphan BOSH deployments should never happen, but in practice they might. Use the orphan-deployments errand to identify them.\n\n\nThe errand will do the following operaitons:\n\n\n\n\nUnbind all applications from the service instances\n\n\nDelete all service instances sequentially\n\n\nCheck if any instances have been created while the errand was running\n\n\nIf instances are detected the errand will fail \n\n\n\n\n\n\nWarning\n\n\nThis errand should only be used with extreme caution when you want to totally destroy all of the on-demand service instances in an environment.\n\n\n\n\nTo run this errand use the following BOSH command against the on-demand service broker deployment:\n\n\n1\nbosh run errand delete-all-service-instances\n\n\n\n\n\n\nViewing resource saturation and scaling resources\n\n\nOnce a deployment has been selected, you can use the \nbosh vms --vitals\n or the \nbosh instances --vitals\n commands to view current resource utilization. You can also view process level information by using \nbosh instances --ps\n.\n\n\nIdentifying the owner of a service instance\n\n\nIf you have spotted a failing deployment, you can identify which org/space owns this service instance, as well as retrieve a list of apps bound to it by following the steps below: \n\n\n\n\nbosh vms $deployment\n shows a vm in failing state\n\n\nTake the deployment name and strip the \nservice-instance_\n leaving you with a \nguid\n\n\nLogin to CF using a CF Admin user\n\n\nRun \n\n1\n2\n$ cf curl /v2/service_instances/:guid \n|\n grep \nspace_url\n\n\nspace_url\n: \n/v2/spaces/\n$space_guid\n\n\n\n\n\n\n\n\nTake the space url and run \n\n1\n2\n3\n$ cf curl /v2/spaces/\n$space_guid\n \n|\n grep -E \nname|organization_url\n\n\nname\n: \nmyspace\n,\n\norganization_url\n: \n/v2/organizations/\n$org_guid\n\n\n\n\n\n\n\n\n\n\nTake the organization_url and run \n\n1\n2\ncf curl /v2/organizations/$org_guid | grep \u201cname\u201d\n\nname\n: \nmyorg\n\n\n\n\n\n\n\n\n\n\nCombine the output of the names to give you the org and space of the service instance. \nFrom here run:\n\n1\ncf target -o $org -s $space\n\n\n\n\n\n\n\ncf services\n shows you all the services and bound apps\n\n\nTo find who is the space manger run:\n\n1\ncf curl /v2/spaces/$space_guid/managers\n\n\n\n\n\nUse this information to contact the manager if needed \n\n\n\n\nMonitoring quota saturation and number of service instances\n\n\nQuota saturation and total number of service instances are available via ODB metrics emitted to loggregator. The metric names are shown below:\n\n\n\n\n\n\n\n\nMetric Name\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\non-demand-broker/{service-name-marketplace}/quota_remaining\n\n\nglobal quota remaining for all instances across all plans\n\n\n\n\n\n\non-demand-broker/{service-name-marketplace}/{plan_name}/quota_remaining\n\n\nquota remaining for a particular plan\n\n\n\n\n\n\non-demand-broker/{service-name-marketplace}/total_instances\n\n\ntotal instances created across all plans\n\n\n\n\n\n\non-demand-broker/{service-name-marketplace}/{plan_name}/total_instances\n\n\ntotal instances created for a given plan\n\n\n\n\n\n\n\n\n\n\nNote\n\n\nQuota metrics are not emitted if no quota has been set.\n\n\n\n\nFiling a support ticket\n\n\nYou can file a support ticket \nhere\n. Please be sure to provide the \nerror message\n from \n\n1\n$ cf service \nyour-service\n\n\n\n\n\nPlease also provide your \nservice broker logs\n, your \nservice instance logs\n and \nBOSH task output\n (if a \ntask-id\n is provided as part of the \ncf service \nyour-service\n output) to help expedite troubleshooting.\n\n\nKnowledge Base (Community)\n\n\nImagine a world where we autopopulate the first 10 hits from \nhttp://discuss.pivotal.io\n . For now, you'll just have to click on the link.", 
            "title": "Techniques"
        }, 
        {
            "location": "/techniques/#techniques", 
            "text": "", 
            "title": "Techniques"
        }, 
        {
            "location": "/techniques/#using-bosh-and-cf-to-access-logs-and-ssh", 
            "text": "Follow the steps described here to  target your BOSH CLI  and  log-in to your CF CLI", 
            "title": "Using BOSH and CF to access logs and SSH"
        }, 
        {
            "location": "/techniques/#accessing-broker-logs-and-vms", 
            "text": "Identify the ODB deployment using  1 $ bosh deployments   Download the ODB manifest using  1 $ bosh download manifest  odb-deployment-name  odb.yml   Select the ODB deployment using  1 $ bosh deployment odb.yml   View VMs in the deployment using  1 $ bosh instances   To ssh onto the VM use  1 $ bosh ssh  instance-id    Download broker logs by using the  1 $ bosh logs  instance-id   \nYou can also  access logs via Ops Manager  by clicking on the \"logs\" tab in the tile and downloading the broker logs.   The archive generated by BOSH or Ops Manager will comprise the following logs:     Log Name  Description      broker_ctl.log  The log for the control script for starting and stopping the on demand broker    broker.log  The log for requests to the on demand broker and the actions the broker performs while orchestrating the request (e.g. generating a manifest and calling BOSH). You will want to start here when troubleshooting    post-start.stderr.log  The log for any errors that occur during post-start verification    post-start.stdout.log  The log for post-start verification", 
            "title": "Accessing broker logs and VM(s)"
        }, 
        {
            "location": "/techniques/#accessing-service-instance-manifests-logs-and-vms", 
            "text": "To target an individual service instance deployment, retrieve the \nthe guid of your service instance with the CF CLI command  1 $ cf service  { YOUR_SERVICE }  --guid     Pre-pend the text  service_instance-  to the guid you just obtained to create the ID that BOSH uses for your service instance (e.g. if your guid is  1Hy6H , this becomes  service_instance-1Hy6H ).    Download your bosh manifest for the service using  1 $ bosh download manifest service_instance-guid myservice.yml    Select the deployment using  1 $ bosh deployment myservice.yml   View VMs in the deployment using  1 $ bosh instances   Download instance logs by using the  1 $ bosh logs  instance-id    To ssh onto the VM use  1 $ bosh ssh  instance-id", 
            "title": "Accessing service instance manifests logs and VM(s)"
        }, 
        {
            "location": "/techniques/#mapping-a-cf-service-to-a-bosh-deployment", 
            "text": "Retrieve the the guid of your service instance with the CF CLI command 1 $ cf service  { YOUR_SERVICE }  --guid    Pre-pend the text  service_instance-  to the guid you just obtained to create the ID that BOSH uses for your service instance (e.g. if your guid is  1Hy6H , this becomes  service_instance-1Hy6H ).    Download your bosh manifest for the service using 1 $ bosh download manifest  { your_service_instance-guid }  myservice.yml     Select the deployment using 1 $ bosh deployment myservice.yml", 
            "title": "Mapping a cf service to a bosh deployment"
        }, 
        {
            "location": "/techniques/#getting-the-admin-credentials-for-a-service-instance", 
            "text": "Identify the service deployment by GUID .  Login to BOSH  Download the manifest for the service instance  and  add the guid  if using the v1 BOSH CLI  Look in the manifest for the credentials as described in the service documentation.", 
            "title": "Getting the admin credentials for a service instance"
        }, 
        {
            "location": "/techniques/#parsing-a-cf-error-message", 
            "text": "Failed operations (create, update, bind, unbind, delete) will result in an error message that can be retrieved using the CF cli   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22 $ cf service myservice\n\nService instance: myservice\nService: super-db\nBound apps:\nTags:\nPlan: dedicated-vm\nDescription: Dedicated Instance\nDocumentation url:\nDashboard: \n\nLast Operation\nStatus: create failed Message: Instance provisioning failed: There was a problem completing your request.           Please contact your operations team providing the following information:           service: redis-acceptance,           service-instance-guid: ae9e232c-0bd5-4684-af27-1b08b0c70089,          broker-request-id: 63da3a35-24aa-4183-aec6-db8294506bac,           task-id:  442 ,           operation: create Started:  2017 -03-13T10:16:55Z\nUpdated:  2017 -03-13T10:17:58Z  \nThe information under the \"Message\" field can be used to debug further. Please provide this information to Pivotal Support when filing a ticket.  The  task-id  field maps to the BOSH task id. For further information on a failed BOSH task, use the  bosh task  task-id  command in the BOSH CLI.  The  broker-request-guid  maps to the portion of the On-Demand Broker log containing the failed step. Access the broker log via your syslog aggregator, or access bosh logs for the broker by typing  bosh logs broker 0 . If you have more than one broker instance, you will need to repeat this process for each instance.", 
            "title": "Parsing a CF error message"
        }, 
        {
            "location": "/techniques/#running-service-broker-errands", 
            "text": "", 
            "title": "Running Service Broker Errands"
        }, 
        {
            "location": "/techniques/#register-broker", 
            "text": "This errand registers the broker with Cloud Foundry and enables access to plans in the service catalog. The errand should be run whenever the broker is re-deployed with new catalog metadata to update the Cloud Foundry catalog.  Plans with disabled service access will not be visible to non-admin Cloud Foundry users (including Org Managers and Space Managers). Admin Cloud Foundry users can see all plans including those with disabled service access.  The errand will do the following operaitons:   Register the service broker with Cloud Controller  Enable service access for any plans that have the radio button set to  enabled  in the tile plan page.  Disable service access for any plans that have the radio button set to  disabled  in the tile plan page.  Do nothing for any for any plans that have the radio button set to  manual   To run this errand use the following BOSH command against the on-demand service broker deployment:  1 bosh run errand register-broker", 
            "title": "Register Broker"
        }, 
        {
            "location": "/techniques/#deregister-broker", 
            "text": "This errand deregisters a broker from Cloud Foundry. It requires that there are no existing service instances. You can use the  Delete All Service Instances errand  to delete any existing service instances that are problematic.  The errand will do the following operaitons:   Delete the service broker from Cloud Controller  Fail if there are any service instances, with or without bindings   To run this errand use the following BOSH command against the on-demand service broker deployment:  1 bosh run errand deregister-broker", 
            "title": "Deregister Broker"
        }, 
        {
            "location": "/techniques/#upgrade-all-service-instances", 
            "text": "If you have made changes to the plan defintion or uploaded a new tile into OpsManager you may want to upgrade all the services to the latest software / plan definition.   To do this you can either select the errand through the OpsManager UI and have this happen along with the  apply-changes  action or run the errand directly.  The errand will do the following operaitons:   Collect all of the service instances the on-demand broker has registered  For each instance the errand will serially:  Issue an upgrade command to the on-demand broker   The on-demand broker will re-generate the service instance manifest based on its latest configuration from the tile.  The on-demand broker will deploy the new mainfest for the service instance.  The errand will wait for this operation to complete, then proceed to the next instance.    Any instances that have ongoing BOSH tasks at the time of upgrade will be added to a retry list.  Any instances in the retry list will be retried at the end of the errand until all are upgraded.  If any instance fails to upgrade the errand will fail immediately.  This prevents any systemic problem from spreading to the rest of your service instances.", 
            "title": "Upgrade All Service Instances"
        }, 
        {
            "location": "/techniques/#detect-orphaned-bosh-deployments", 
            "text": "The deployment for a service instance is defined as \u2018Orphaned\u2019 when the BOSH deployment is still running, but the service is no longer registered in Cloud Foundry.  The orphan-deployments errand will collate a list of service deployments that have no matching service instances in Cloud Foundry and return the list to the operator. It is then up to the operator to remove the orphaned bosh deployments.  To run this errand use the following BOSH command against the on-demand service broker deployment:  1 bosh run errand orphan-deployments   If orphan deployments are present, the errand will output a list of deployment names:  1\n2\n3\n4\n5\n6\n7 [stdout]  [{ deployment_name : service-instance_aoeu39fgn-8125-05h2-9023-9vbxf7676f3 }]  [stderr]  None  Errand  orphan-deployments  completed successfully (exit code 0)    To cleanup orphaned instances you can perform the following actions:   Warning  Deleting the bosh deployment will destroy the vm, any data present will be lost.   To delete the orphan deployment run the following BOSH command: 1 bosh delete deployment service-instance_$GUID", 
            "title": "Detect Orphaned BOSH Deployments"
        }, 
        {
            "location": "/techniques/#delete-all-service-instances", 
            "text": "This errand deletes all service instances of your broker\u2019s service offering in every org and space of Cloud Foundry. It uses the Cloud Controller API to do this, and therefore only deletes instances the Cloud Controller knows about. It will not delete orphan BOSH deployments: those that don\u2019t correspond to a known service instance. Orphan BOSH deployments should never happen, but in practice they might. Use the orphan-deployments errand to identify them.  The errand will do the following operaitons:   Unbind all applications from the service instances  Delete all service instances sequentially  Check if any instances have been created while the errand was running  If instances are detected the errand will fail     Warning  This errand should only be used with extreme caution when you want to totally destroy all of the on-demand service instances in an environment.   To run this errand use the following BOSH command against the on-demand service broker deployment:  1 bosh run errand delete-all-service-instances", 
            "title": "Delete All Service Instances"
        }, 
        {
            "location": "/techniques/#viewing-resource-saturation-and-scaling-resources", 
            "text": "Once a deployment has been selected, you can use the  bosh vms --vitals  or the  bosh instances --vitals  commands to view current resource utilization. You can also view process level information by using  bosh instances --ps .", 
            "title": "Viewing resource saturation and scaling resources"
        }, 
        {
            "location": "/techniques/#identifying-the-owner-of-a-service-instance", 
            "text": "If you have spotted a failing deployment, you can identify which org/space owns this service instance, as well as retrieve a list of apps bound to it by following the steps below:    bosh vms $deployment  shows a vm in failing state  Take the deployment name and strip the  service-instance_  leaving you with a  guid  Login to CF using a CF Admin user  Run  1\n2 $ cf curl /v2/service_instances/:guid  |  grep  space_url  space_url :  /v2/spaces/ $space_guid     Take the space url and run  1\n2\n3 $ cf curl /v2/spaces/ $space_guid   |  grep -E  name|organization_url  name :  myspace , organization_url :  /v2/organizations/ $org_guid      Take the organization_url and run  1\n2 cf curl /v2/organizations/$org_guid | grep \u201cname\u201d name :  myorg      Combine the output of the names to give you the org and space of the service instance. \nFrom here run: 1 cf target -o $org -s $space    cf services  shows you all the services and bound apps  To find who is the space manger run: 1 cf curl /v2/spaces/$space_guid/managers   Use this information to contact the manager if needed", 
            "title": "Identifying the owner of a service instance"
        }, 
        {
            "location": "/techniques/#monitoring-quota-saturation-and-number-of-service-instances", 
            "text": "Quota saturation and total number of service instances are available via ODB metrics emitted to loggregator. The metric names are shown below:     Metric Name  Description      on-demand-broker/{service-name-marketplace}/quota_remaining  global quota remaining for all instances across all plans    on-demand-broker/{service-name-marketplace}/{plan_name}/quota_remaining  quota remaining for a particular plan    on-demand-broker/{service-name-marketplace}/total_instances  total instances created across all plans    on-demand-broker/{service-name-marketplace}/{plan_name}/total_instances  total instances created for a given plan      Note  Quota metrics are not emitted if no quota has been set.", 
            "title": "Monitoring quota saturation and number of service instances"
        }, 
        {
            "location": "/techniques/#filing-a-support-ticket", 
            "text": "You can file a support ticket  here . Please be sure to provide the  error message  from  1 $ cf service  your-service   \nPlease also provide your  service broker logs , your  service instance logs  and  BOSH task output  (if a  task-id  is provided as part of the  cf service  your-service  output) to help expedite troubleshooting.", 
            "title": "Filing a support ticket"
        }, 
        {
            "location": "/techniques/#knowledge-base-community", 
            "text": "Imagine a world where we autopopulate the first 10 hits from  http://discuss.pivotal.io  . For now, you'll just have to click on the link.", 
            "title": "Knowledge Base (Community)"
        }
    ]
}